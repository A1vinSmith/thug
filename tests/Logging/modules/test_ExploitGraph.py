from thug.Logging.modules.ExploitGraph import ExploitGraph


class TestExploitGraph:
    url    = "www.example.com"
    source = "www.ex1.com"
    dest   = "www.ex2.com"

    final_graph = '{"directed": true, "graph": {"url": "www.example.com", "name": "thug-exploit-graph"}, ' \
                  '"nodes": [{"url": "www.ex1.com", "id": 0}, {"url": "www.ex2.com", "id": 1}], ' \
                  '"links": [{"source": 0, "method": "iframe", "key": 0, "target": 1}], ' \
                  '"multigraph": true}'

    exploit_graph = ExploitGraph(url)

    def test_init(self):
        assert self.exploit_graph.G.graph["url"] in (self.url, )
        assert self.exploit_graph.G.graph["name"] in ("thug-exploit-graph", )

    def test_add_connection(self):
        self.exploit_graph.add_connection(self.source, self.dest, "iframe")
        nodes = self.exploit_graph.G.nodes
        assert self.source in nodes
        assert self.dest in nodes

        edge = list(self.exploit_graph.G.edges(data = True))[0]
        assert self.source in edge
        assert self.dest in edge
        assert {'method': 'iframe'} in edge

    def test_draw(self):
        graph = self.exploit_graph.draw()
        assert graph in (self.final_graph, )
